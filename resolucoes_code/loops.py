 # ESTRUTURAS DE REPETI√á√ÉO EM PYTHON (LOOPS)
 # Usamos loops para repetir a√ß√µes v√°rias vezes, sem precisar escrever o mesmo c√≥digo v√°rias vezes

print("=== EXEMPLOS DE LOOPS ===\n")  # T√≠tulo dos exemplos

 # 1. LOOP FOR COM RANGE
 # O loop 'for' √© usado para repetir uma a√ß√£o um n√∫mero definido de vezes
 # Aqui, vamos contar de 1 at√© 5
print("1. Contando de 1 a 5:")
for i in range(1, 6):  # range(in√≠cio, fim) - o 'fim' n√£o √© inclu√≠do
    print(f"N√∫mero: {i}")  # Mostra o n√∫mero atual

print("\n" + "="*30 + "\n")  # Separador visual

 # 2. LOOP FOR COM LISTA
 # Podemos usar o 'for' para passar por cada item de uma lista
print("2. Iterando sobre uma lista de frutas:")
frutas = ["ma√ß√£", "banana", "laranja", "uva"]  # Lista de frutas
for fruta in frutas:
    print(f"Eu gosto de {fruta} üçé")  # Mostra cada fruta da lista

print("\n" + "="*30 + "\n")  # Separador visual

 # 3. LOOP WHILE
 # O loop 'while' repete enquanto uma condi√ß√£o for verdadeira
 # Aqui, fazemos uma contagem regressiva
print("3. Contagem regressiva com while:")
contador = 5  # Come√ßa do 5
while contador > 0:
    print(f"Faltam {contador} segundos...")  # Mostra o tempo restante
    contador = contador - 1  # Diminui 1 a cada volta (pode usar contador -= 1)
print("üöÄ Decolagem!")  # Mensagem final quando termina

print("\n" + "="*30 + "\n")  # Separador visual

 # 4. EXEMPLO PR√ÅTICO: TABUADA
 # Usando loop para mostrar a tabuada de um n√∫mero
numero = int(input("Digite um n√∫mero para ver sua tabuada: "))  # Pede um n√∫mero ao usu√°rio
print(f"\nüìä Tabuada do {numero}:")
for i in range(1, 11):  # Vai de 1 at√© 10
    resultado = numero * i  # Calcula o resultado da multiplica√ß√£o
    print(f"{numero} √ó {i} = {resultado}")  # Mostra cada linha da tabuada

print("\n" + "="*30 + "\n")  # Separador visual

 # 5. LOOP COM ACUMULADOR
 # Usamos um acumulador para somar v√°rios valores
print("5. Somando n√∫meros de 1 a 10:")
soma_total = 0  # Come√ßa com zero
for num in range(1, 11):  # Vai de 1 at√© 10
    soma_total += num  # Adiciona o n√∫mero atual ao total (igual a soma_total = soma_total + num)
    print(f"Somando {num}, total at√© agora: {soma_total}")  # Mostra o progresso da soma

print(f"\nüßÆ Soma final: {soma_total}")  # Mostra o resultado final

print("\n" + "="*30 + "\n")  # Separador visual

 # 6. LOOP COM ENTRADA DO USU√ÅRIO
 # O loop continua at√© o usu√°rio digitar 0
print("6. Digite n√∫meros para somar (digite 0 para parar):")
soma = 0  # Come√ßa com zero
while True:  # Loop infinito (vai rodar at√© encontrar um break)
    numero = int(input("Digite um n√∫mero: "))  # Pede um n√∫mero ao usu√°rio
    if numero == 0:  # Se o n√∫mero for zero
        break  # Sai do loop
    soma += numero  # Adiciona o n√∫mero √† soma
    print(f"Soma atual: {soma}")  # Mostra a soma atual

print(f"üíØ Soma final de todos os n√∫meros: {soma}")  # Mostra o resultado final

print("\n" + "="*30 + "\n")  # Separador visual

 # 7. LOOP COM CONTINUE (pula itera√ß√£o)
 # O 'continue' faz o loop pular para o pr√≥ximo valor sem executar o resto do c√≥digo
print("7. N√∫meros pares de 1 a 10:")
for i in range(1, 11):  # Vai de 1 at√© 10
    if i % 2 != 0:  # Se o n√∫mero for √≠mpar
        continue  # Pula para a pr√≥xima volta do loop
    print(f"N√∫mero par: {i}")  # Mostra apenas os n√∫meros pares

print("\nüéâ Fim dos exemplos de loops!")  # Mensagem final
